[{"model": "blog.comment", "pk": 1, "fields": {"creator": 1, "content": "What a great post!", "content_type": 7, "object_id": 1, "created_at": "2022-11-05T09:14:21.529Z", "modified_at": "2022-11-05T09:14:21.543Z"}}, {"model": "blog.comment", "pk": 2, "fields": {"creator": 1, "content": "I like myself!", "content_type": 4, "object_id": 1, "created_at": "2022-11-05T09:14:21.529Z", "modified_at": "2022-11-05T09:14:21.543Z"}}, {"model": "blog.comment", "pk": 3, "fields": {"creator": 1, "content": "asdasd", "content_type": 7, "object_id": 1, "created_at": "2022-11-10T11:38:13.509Z", "modified_at": "2022-11-10T11:38:13.509Z"}}, {"model": "blog.comment", "pk": 4, "fields": {"creator": 1, "content": "Hello world", "content_type": 7, "object_id": 1, "created_at": "2022-11-10T11:52:21.577Z", "modified_at": "2022-11-10T11:52:21.577Z"}}, {"model": "blog.comment", "pk": 5, "fields": {"creator": 1, "content": "test crispy forms", "content_type": 7, "object_id": 1, "created_at": "2022-11-10T12:04:19.784Z", "modified_at": "2022-11-10T12:04:19.784Z"}}, {"model": "blog.comment", "pk": 6, "fields": {"creator": 1, "content": "Learn SQLAlchemy is fun", "content_type": 7, "object_id": 4, "created_at": "2022-11-10T12:06:34.055Z", "modified_at": "2022-11-10T12:06:34.055Z"}}, {"model": "blog.comment", "pk": 7, "fields": {"creator": 1, "content": "test", "content_type": 7, "object_id": 1, "created_at": "2022-11-12T09:42:26.445Z", "modified_at": "2022-11-12T09:42:26.445Z"}}, {"model": "blog.comment", "pk": 8, "fields": {"creator": 1, "content": "testo", "content_type": 7, "object_id": 1, "created_at": "2022-11-12T09:49:01.118Z", "modified_at": "2022-11-12T09:49:01.118Z"}}, {"model": "blog.comment", "pk": 9, "fields": {"creator": 1, "content": "hello logg", "content_type": 7, "object_id": 4, "created_at": "2022-11-16T01:33:00.026Z", "modified_at": "2022-11-16T01:33:00.026Z"}}, {"model": "blog.comment", "pk": 10, "fields": {"creator": 1, "content": "Hello django", "content_type": 7, "object_id": 2, "created_at": "2022-11-17T11:21:18.346Z", "modified_at": "2022-11-17T11:21:18.346Z"}}, {"model": "blog.tag", "pk": 1, "fields": {"value": "example"}}, {"model": "blog.tag", "pk": 2, "fields": {"value": "Django"}}, {"model": "blog.tag", "pk": 3, "fields": {"value": "javascript"}}, {"model": "blog.tag", "pk": 4, "fields": {"value": "SQLAlchemy"}}, {"model": "blog.tag", "pk": 5, "fields": {"value": "sass"}}, {"model": "blog.tag", "pk": 6, "fields": {"value": "OpenCV"}}, {"model": "blog.post", "pk": 1, "fields": {"author": 1, "created_at": "2022-11-04T13:54:09.510Z", "modified_at": "2022-11-04T13:54:09.510Z", "published_at": "2022-11-04T20:52:18Z", "title": "Example", "slug": "example", "summary": "This is an example for post", "content": "<h1>Hello post example</h1>\r\n<p>This is a paragraph made for this example</p>", "tags": [1]}}, {"model": "blog.post", "pk": 2, "fields": {"author": 1, "created_at": "2022-11-04T13:55:12.846Z", "modified_at": "2022-11-04T13:55:12.846Z", "published_at": "2022-11-04T20:53:40Z", "title": "Django", "slug": "django", "summary": "Learn django", "content": "<h1>Learn Django</h1>\r\n<p>\r\nLearn Django text\r\n</p>", "tags": [2]}}, {"model": "blog.post", "pk": 3, "fields": {"author": 1, "created_at": "2022-11-10T07:21:53.735Z", "modified_at": "2022-11-10T07:21:53.735Z", "published_at": "2022-11-10T08:20:37Z", "title": "Javascript", "slug": "javascript", "summary": "avaScript is a lightweight, interpreted programming language. It is designed for creating network-centric applications. It is complimentary to and integrated with Java. JavaScript is very easy to implement because it is integrated with HTML. It is open and cross-platform.", "content": "avaScript is a lightweight, interpreted programming language. It is designed for creating network-centric applications. It is complimentary to and integrated with Java. JavaScript is very easy to implement because it is integrated with HTML. It is open and cross-platform.\r\n\r\nWhy to Learn Javascript\r\nJavascript is a MUST for students and working professionals to become a great Software Engineer specially when they are working in Web Development Domain. I will list down some of the key advantages of", "tags": [3]}}, {"model": "blog.post", "pk": 4, "fields": {"author": 1, "created_at": "2022-11-10T07:23:08.768Z", "modified_at": "2022-11-10T07:23:08.768Z", "published_at": "2022-11-10T08:22:33Z", "title": "SQLAlchemy", "slug": "sqlalchemy", "summary": "SQLAlchemy is a popular SQL toolkit and Object Relational Mapper. It is written in Python and gives full power and flexibility of SQL to an application developer. It is an open source and cross-platform software released under MIT license. SQLAlchemy is famous for its object-relational mapper (ORM), using which classes can be mapped to the database, thereby allowing the object model and database schema to develop in a cleanly decoupled way from the beginning.", "content": "SQLAlchemy core includes SQL rendering engine, DBAPI integration, transaction integration, and schema description services. SQLAlchemy core uses SQL Expression Language that provides a schema-centric usage paradigm whereas SQLAlchemy ORM is a domain-centric mode of usage.\r\n\r\nThe SQL Expression Language presents a system of representing relational database structures and expressions using Python constructs. It presents a system of representing the primitive constructs of the relational database directly without opinion, which is in contrast to ORM that presents a high level and abstracted pattern of usage, which itself is an example of applied usage of the Expression Language.\r\n\r\nExpression Language is one of the core components of SQLAlchemy. It allows the programmer to specify SQL statements in Python code and use it directly in more complex queries. Expression language is independent of backend and comprehensively covers every aspect of raw SQL. It is closer to raw SQL than any other component in SQLAlchemy.\r\n\r\nExpression Language represents the primitive constructs of the relational database directly. Because the ORM is based on top of Expression language, a typical Python database application may have overlapped use of both. The application may use expression language alone, though it has to define its own system of translating application concepts into individual database queries.\r\n\r\nStatements of Expression language will be translated into corresponding raw SQL queries by SQLAlchemy engine. We shall now learn how to create the engine and execute various SQL queries with its help.", "tags": [4]}}, {"model": "blog.post", "pk": 5, "fields": {"author": 1, "created_at": "2022-11-10T07:24:29.688Z", "modified_at": "2022-11-10T07:24:29.688Z", "published_at": "2022-11-30T08:24:03Z", "title": "Sass", "slug": "sass", "summary": "SASS (Syntactically Awesome Stylesheet) is a CSS pre-processor, which helps to reduce repetition with CSS and saves time. It is more stable and powerful CSS extension language that describes the style of document structurally. This tutorial covers the basics of SASS.", "content": "What is SASS?\r\nSASS (Syntactically Awesome Stylesheet) is a CSS pre-processor, which helps to reduce repetition with CSS and saves time. It is more stable and powerful CSS extension language that describes the style of a document cleanly and structurally.\r\n\r\nIt was initially designed by Hampton Catlin and developed by Natalie Weizenbaum in 2006. Later, Weizenbaum and Chris Eppstein used its initial version to extend the Sass with SassScript.\r\n\r\nWhy to Use SASS?\r\nIt is a pre-processing language which provides indented syntax (its own syntax) for CSS.\r\n\r\nIt provides some features, which are used for creating stylesheets that allows writing code more efficiently and is easy to maintain.\r\n\r\nIt is a super set of CSS, which means it contains all the features of CSS and is an open source pre-processor, coded in Ruby.\r\n\r\nIt provides the document style in a good, structured format than flat CSS. It uses re-usable methods, logic statements and some of the built-in functions such as color manipulation, mathematics and parameter lists.\r\n\r\nFeatures of SASS\r\nIt is more stable, powerful, and compatible with versions of CSS.\r\n\r\nIt is a super set of CSS and is based on JavaScript.\r\n\r\nIt is known as syntactic sugar for CSS, which means it makes easier way for user to read or express the things more clearly.\r\n\r\nIt uses its own syntax and compiles to readable CSS.\r\n\r\nYou can easily write CSS in less code within less time.\r\n\r\nIt is an open source pre-processor, which is interpreted into CSS.\r\n\r\nAdvantages of SASS\r\nIt allows writing clean CSS in a programming construct.\r\n\r\nIt helps in writing CSS quickly.\r\n\r\nIt is a superset of CSS, which helps designers and developers work more efficiently and quickly.\r\n\r\nAs Sass is compatible with all versions of CSS, we can use any available CSS libraries.\r\n\r\nIt is possible to use nested syntax and useful functions such as color manipulation, mathematics and other values.\r\n\r\nDisadvantages of SASS\r\nIt takes time for a developer to learn new features present in this pre-processor.\r\n\r\nIf many people are working on the same site, then should use the same preprocessor. Some people use Sass and some people use CSS to edit the files directly. Therefore, it becomes difficult to work on the site.\r\n\r\nThere are chances of losing benefits of browser's built-in element inspector.", "tags": [5]}}, {"model": "blog.post", "pk": 6, "fields": {"author": 1, "created_at": "2022-11-10T07:25:40.463Z", "modified_at": "2022-11-10T07:25:40.463Z", "published_at": "2022-12-07T12:25:11Z", "title": "OpenCV", "slug": "opencv", "summary": "OpenCV is a cross-platform library using which we can develop real-time computer vision applications. It mainly focuses on image processing, video capture and analysis including features like face detection and object detection. In this tutorial, we explain how you can use OpenCV in your applications.", "content": "OpenCV is a cross-platform library using which we can develop real-time computer vision applications. It mainly focuses on image processing, video capture and analysis including features like face detection and object detection.\r\n\r\nLet’s start the chapter by defining the term \"Computer Vision\".\r\n\r\nComputer Vision\r\nComputer Vision can be defined as a discipline that explains how to reconstruct, interrupt, and understand a 3D scene from its 2D images, in terms of the properties of the structure present in the scene. It deals with modeling and replicating human vision using computer software and hardware.\r\n\r\nComputer Vision overlaps significantly with the following fields −\r\n\r\nImage Processing − It focuses on image manipulation.\r\n\r\nPattern Recognition − It explains various techniques to classify patterns.\r\n\r\nPhotogrammetry − It is concerned with obtaining accurate measurements from images.\r\n\r\nComputer Vision Vs Image Processing\r\nImage processing deals with image-to-image transformation. The input and output of image processing are both images.\r\n\r\nComputer vision is the construction of explicit, meaningful descriptions of physical objects from their image. The output of computer vision is a description or an interpretation of structures in 3D scene.\r\n\r\nApplications of Computer Vision\r\nHere we have listed down some of major domains where Computer Vision is heavily used.\r\n\r\nRobotics Application\r\nLocalization − Determine robot location automatically\r\n\r\nNavigation\r\n\r\nObstacles avoidance\r\n\r\nAssembly (peg-in-hole, welding, painting)\r\n\r\nManipulation (e.g. PUMA robot manipulator)\r\n\r\nHuman Robot Interaction (HRI) − Intelligent robotics to interact with and serve people\r\n\r\nMedicine Application\r\nClassification and detection (e.g. lesion or cells classification and tumor detection)\r\n2D/3D segmentation\r\n3D human organ reconstruction (MRI or ultrasound)\r\nVision-guided robotics surgery\r\nIndustrial Automation Application\r\nIndustrial inspection (defect detection)\r\nAssembly\r\nBarcode and package label reading\r\nObject sorting\r\nDocument understanding (e.g. OCR)\r\nSecurity Application\r\nBiometrics (iris, finger print, face recognition)\r\n\r\nSurveillance − Detecting certain suspicious activities or behaviors\r\n\r\nTransportation Application\r\nAutonomous vehicle\r\nSafety, e.g., driver vigilance monitoring\r\nFeatures of OpenCV Library\r\nUsing OpenCV library, you can −\r\n\r\nRead and write images\r\n\r\nCapture and save videos\r\n\r\nProcess images (filter, transform)\r\n\r\nPerform feature detection\r\n\r\nDetect specific objects such as faces, eyes, cars, in the videos or images.\r\n\r\nAnalyze the video, i.e., estimate the motion in it, subtract the background, and track objects in it.\r\n\r\nOpenCV was originally developed in C++. In addition to it, Python and Java bindings were provided. OpenCV runs on various Operating Systems such as windows, Linux, OSx, FreeBSD, Net BSD, Open BSD, etc.\r\n\r\nThis tutorial explains the concepts of OpenCV with examples using Java bindings.\r\n\r\nOpenCV Library Modules\r\nFollowing are the main library modules of the OpenCV library.\r\n\r\nCore Functionality\r\nThis module covers the basic data structures such as Scalar, Point, Range, etc., that are used to build OpenCV applications. In addition to these, it also includes the multidimensional array Mat, which is used to store the images. In the Java library of OpenCV, this module is included as a package with the name org.opencv.core.\r\n\r\nImage Processing\r\nThis module covers various image processing operations such as image filtering, geometrical image transformations, color space conversion, histograms, etc. In the Java library of OpenCV, this module is included as a package with the name org.opencv.imgproc.\r\n\r\nVideo\r\nThis module covers the video analysis concepts such as motion estimation, background subtraction, and object tracking. In the Java library of OpenCV, this module is included as a package with the name org.opencv.video.\r\n\r\nVideo I/O\r\nThis module explains the video capturing and video codecs using OpenCV library. In the Java library of OpenCV, this module is included as a package with the name org.opencv.videoio.\r\n\r\ncalib3d\r\nThis module includes algorithms regarding basic multiple-view geometry algorithms, single and stereo camera calibration, object pose estimation, stereo correspondence and elements of 3D reconstruction. In the Java library of OpenCV, this module is included as a package with the name org.opencv.calib3d.\r\n\r\nfeatures2d\r\nThis module includes the concepts of feature detection and description. In the Java library of OpenCV, this module is included as a package with the name org.opencv.features2d.\r\n\r\nObjdetect\r\nThis module includes the detection of objects and instances of the predefined classes such as faces, eyes, mugs, people, cars, etc. In the Java library of OpenCV, this module is included as a package with the name org.opencv.objdetect.\r\n\r\nHighgui\r\nThis is an easy-to-use interface with simple UI capabilities. In the Java library of OpenCV, the features of this module is included in two different packages namely, org.opencv.imgcodecs and org.opencv.videoio.\r\n\r\nA Brief History of OpenCV\r\nOpenCV was initially an Intel research initiative to advise CPU-intensive applications. It was officially launched in 1999.\r\n\r\nIn the year 2006, its first major version, OpenCV 1.0 was released.\r\nIn October 2009, the second major version, OpenCV 2 was released.\r\nIn August 2012, OpenCV was taken by a nonprofit organization OpenCV.org.", "tags": [6]}}, {"model": "blango_auth.User", "pk": 1, "fields": {"password": "argon2$argon2id$v=19$m=102400,t=2,p=8$cmZKMzVDTDlhd1k5ZzJYWjlpT1dRWA$+1ScL9HxCM1llQ94TKYDww", "last_login": "2022-11-17T10:31:46.833Z", "is_superuser": true, "username": "codio", "first_name": "", "last_name": "", "email": "sultanmohammad94@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2022-11-04T13:34:47.556Z", "groups": [], "user_permissions": []}}]